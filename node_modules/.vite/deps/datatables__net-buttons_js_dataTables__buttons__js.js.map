{
  "version": 3,
  "sources": ["../../datatables.net-buttons/js/dataTables.buttons.js"],
  "sourcesContent": ["/*! Buttons for DataTables 2.4.2\n * Â© SpryMedia Ltd - datatables.net/license\n */\n\n(function( factory ){\n\tif ( typeof define === 'function' && define.amd ) {\n\t\t// AMD\n\t\tdefine( ['jquery', 'datatables.net'], function ( $ ) {\n\t\t\treturn factory( $, window, document );\n\t\t} );\n\t}\n\telse if ( typeof exports === 'object' ) {\n\t\t// CommonJS\n\t\tvar jq = require('jquery');\n\t\tvar cjsRequires = function (root, $) {\n\t\t\tif ( ! $.fn.dataTable ) {\n\t\t\t\trequire('datatables.net')(root, $);\n\t\t\t}\n\t\t};\n\n\t\tif (typeof window === 'undefined') {\n\t\t\tmodule.exports = function (root, $) {\n\t\t\t\tif ( ! root ) {\n\t\t\t\t\t// CommonJS environments without a window global must pass a\n\t\t\t\t\t// root. This will give an error otherwise\n\t\t\t\t\troot = window;\n\t\t\t\t}\n\n\t\t\t\tif ( ! $ ) {\n\t\t\t\t\t$ = jq( root );\n\t\t\t\t}\n\n\t\t\t\tcjsRequires( root, $ );\n\t\t\t\treturn factory( $, root, root.document );\n\t\t\t};\n\t\t}\n\t\telse {\n\t\t\tcjsRequires( window, jq );\n\t\t\tmodule.exports = factory( jq, window, window.document );\n\t\t}\n\t}\n\telse {\n\t\t// Browser\n\t\tfactory( jQuery, window, document );\n\t}\n}(function( $, window, document, undefined ) {\n'use strict';\nvar DataTable = $.fn.dataTable;\n\n\n\n// Used for namespacing events added to the document by each instance, so they\n// can be removed on destroy\nvar _instCounter = 0;\n\n// Button namespacing counter for namespacing events on individual buttons\nvar _buttonCounter = 0;\n\nvar _dtButtons = DataTable.ext.buttons;\n\n// Custom entity decoder for data export\nvar _entityDecoder = null;\n\n// Allow for jQuery slim\nfunction _fadeIn(el, duration, fn) {\n\tif ($.fn.animate) {\n\t\tel.stop().fadeIn(duration, fn);\n\t}\n\telse {\n\t\tel.css('display', 'block');\n\n\t\tif (fn) {\n\t\t\tfn.call(el);\n\t\t}\n\t}\n}\n\nfunction _fadeOut(el, duration, fn) {\n\tif ($.fn.animate) {\n\t\tel.stop().fadeOut(duration, fn);\n\t}\n\telse {\n\t\tel.css('display', 'none');\n\n\t\tif (fn) {\n\t\t\tfn.call(el);\n\t\t}\n\t}\n}\n\n/**\n * [Buttons description]\n * @param {[type]}\n * @param {[type]}\n */\nvar Buttons = function (dt, config) {\n\t// If not created with a `new` keyword then we return a wrapper function that\n\t// will take the settings object for a DT. This allows easy use of new instances\n\t// with the `layout` option - e.g. `topLeft: $.fn.dataTable.Buttons( ... )`.\n\tif (!(this instanceof Buttons)) {\n\t\treturn function (settings) {\n\t\t\treturn new Buttons(settings, dt).container();\n\t\t};\n\t}\n\n\t// If there is no config set it to an empty object\n\tif (typeof config === 'undefined') {\n\t\tconfig = {};\n\t}\n\n\t// Allow a boolean true for defaults\n\tif (config === true) {\n\t\tconfig = {};\n\t}\n\n\t// For easy configuration of buttons an array can be given\n\tif (Array.isArray(config)) {\n\t\tconfig = { buttons: config };\n\t}\n\n\tthis.c = $.extend(true, {}, Buttons.defaults, config);\n\n\t// Don't want a deep copy for the buttons\n\tif (config.buttons) {\n\t\tthis.c.buttons = config.buttons;\n\t}\n\n\tthis.s = {\n\t\tdt: new DataTable.Api(dt),\n\t\tbuttons: [],\n\t\tlistenKeys: '',\n\t\tnamespace: 'dtb' + _instCounter++\n\t};\n\n\tthis.dom = {\n\t\tcontainer: $('<' + this.c.dom.container.tag + '/>').addClass(this.c.dom.container.className)\n\t};\n\n\tthis._constructor();\n};\n\n$.extend(Buttons.prototype, {\n\t/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\t * Public methods\n\t */\n\n\t/**\n\t * Get the action of a button\n\t * @param  {int|string} Button index\n\t * @return {function}\n\t */ /**\n\t * Set the action of a button\n\t * @param  {node} node Button element\n\t * @param  {function} action Function to set\n\t * @return {Buttons} Self for chaining\n\t */\n\taction: function (node, action) {\n\t\tvar button = this._nodeToButton(node);\n\n\t\tif (action === undefined) {\n\t\t\treturn button.conf.action;\n\t\t}\n\n\t\tbutton.conf.action = action;\n\n\t\treturn this;\n\t},\n\n\t/**\n\t * Add an active class to the button to make to look active or get current\n\t * active state.\n\t * @param  {node} node Button element\n\t * @param  {boolean} [flag] Enable / disable flag\n\t * @return {Buttons} Self for chaining or boolean for getter\n\t */\n\tactive: function (node, flag) {\n\t\tvar button = this._nodeToButton(node);\n\t\tvar klass = this.c.dom.button.active;\n\t\tvar jqNode = $(button.node);\n\n\t\tif (\n\t\t\tbutton.inCollection &&\n\t\t\tthis.c.dom.collection.button &&\n\t\t\tthis.c.dom.collection.button.active !== undefined\n\t\t) {\n\t\t\tklass = this.c.dom.collection.button.active;\n\t\t}\n\n\t\tif (flag === undefined) {\n\t\t\treturn jqNode.hasClass(klass);\n\t\t}\n\n\t\tjqNode.toggleClass(klass, flag === undefined ? true : flag);\n\n\t\treturn this;\n\t},\n\n\t/**\n\t * Add a new button\n\t * @param {object} config Button configuration object, base string name or function\n\t * @param {int|string} [idx] Button index for where to insert the button\n\t * @param {boolean} [draw=true] Trigger a draw. Set a false when adding\n\t *   lots of buttons, until the last button.\n\t * @return {Buttons} Self for chaining\n\t */\n\tadd: function (config, idx, draw) {\n\t\tvar buttons = this.s.buttons;\n\n\t\tif (typeof idx === 'string') {\n\t\t\tvar split = idx.split('-');\n\t\t\tvar base = this.s;\n\n\t\t\tfor (var i = 0, ien = split.length - 1; i < ien; i++) {\n\t\t\t\tbase = base.buttons[split[i] * 1];\n\t\t\t}\n\n\t\t\tbuttons = base.buttons;\n\t\t\tidx = split[split.length - 1] * 1;\n\t\t}\n\n\t\tthis._expandButton(\n\t\t\tbuttons,\n\t\t\tconfig,\n\t\t\tconfig !== undefined ? config.split : undefined,\n\t\t\t(config === undefined || config.split === undefined || config.split.length === 0) &&\n\t\t\t\tbase !== undefined,\n\t\t\tfalse,\n\t\t\tidx\n\t\t);\n\n\t\tif (draw === undefined || draw === true) {\n\t\t\tthis._draw();\n\t\t}\n\n\t\treturn this;\n\t},\n\n\t/**\n\t * Clear buttons from a collection and then insert new buttons\n\t */\n\tcollectionRebuild: function (node, newButtons) {\n\t\tvar button = this._nodeToButton(node);\n\n\t\tif (newButtons !== undefined) {\n\t\t\tvar i;\n\t\t\t// Need to reverse the array\n\t\t\tfor (i = button.buttons.length - 1; i >= 0; i--) {\n\t\t\t\tthis.remove(button.buttons[i].node);\n\t\t\t}\n\n\t\t\t// If the collection has prefix and / or postfix buttons we need to add them in\n\t\t\tif (button.conf.prefixButtons) {\n\t\t\t\tnewButtons.unshift.apply(newButtons, button.conf.prefixButtons);\n\t\t\t}\n\n\t\t\tif (button.conf.postfixButtons) {\n\t\t\t\tnewButtons.push.apply(newButtons, button.conf.postfixButtons);\n\t\t\t}\n\n\t\t\tfor (i = 0; i < newButtons.length; i++) {\n\t\t\t\tvar newBtn = newButtons[i];\n\n\t\t\t\tthis._expandButton(\n\t\t\t\t\tbutton.buttons,\n\t\t\t\t\tnewBtn,\n\t\t\t\t\tnewBtn !== undefined &&\n\t\t\t\t\t\tnewBtn.config !== undefined &&\n\t\t\t\t\t\tnewBtn.config.split !== undefined,\n\t\t\t\t\ttrue,\n\t\t\t\t\tnewBtn.parentConf !== undefined && newBtn.parentConf.split !== undefined,\n\t\t\t\t\tnull,\n\t\t\t\t\tnewBtn.parentConf\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tthis._draw(button.collection, button.buttons);\n\t},\n\n\t/**\n\t * Get the container node for the buttons\n\t * @return {jQuery} Buttons node\n\t */\n\tcontainer: function () {\n\t\treturn this.dom.container;\n\t},\n\n\t/**\n\t * Disable a button\n\t * @param  {node} node Button node\n\t * @return {Buttons} Self for chaining\n\t */\n\tdisable: function (node) {\n\t\tvar button = this._nodeToButton(node);\n\n\t\t$(button.node).addClass(this.c.dom.button.disabled).prop('disabled', true);\n\n\t\treturn this;\n\t},\n\n\t/**\n\t * Destroy the instance, cleaning up event handlers and removing DOM\n\t * elements\n\t * @return {Buttons} Self for chaining\n\t */\n\tdestroy: function () {\n\t\t// Key event listener\n\t\t$('body').off('keyup.' + this.s.namespace);\n\n\t\t// Individual button destroy (so they can remove their own events if\n\t\t// needed). Take a copy as the array is modified by `remove`\n\t\tvar buttons = this.s.buttons.slice();\n\t\tvar i, ien;\n\n\t\tfor (i = 0, ien = buttons.length; i < ien; i++) {\n\t\t\tthis.remove(buttons[i].node);\n\t\t}\n\n\t\t// Container\n\t\tthis.dom.container.remove();\n\n\t\t// Remove from the settings object collection\n\t\tvar buttonInsts = this.s.dt.settings()[0];\n\n\t\tfor (i = 0, ien = buttonInsts.length; i < ien; i++) {\n\t\t\tif (buttonInsts.inst === this) {\n\t\t\t\tbuttonInsts.splice(i, 1);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\t/**\n\t * Enable / disable a button\n\t * @param  {node} node Button node\n\t * @param  {boolean} [flag=true] Enable / disable flag\n\t * @return {Buttons} Self for chaining\n\t */\n\tenable: function (node, flag) {\n\t\tif (flag === false) {\n\t\t\treturn this.disable(node);\n\t\t}\n\n\t\tvar button = this._nodeToButton(node);\n\t\t$(button.node).removeClass(this.c.dom.button.disabled).prop('disabled', false);\n\n\t\treturn this;\n\t},\n\n\t/**\n\t * Get a button's index\n\t *\n\t * This is internally recursive\n\t * @param {element} node Button to get the index of\n\t * @return {string} Button index\n\t */\n\tindex: function (node, nested, buttons) {\n\t\tif (!nested) {\n\t\t\tnested = '';\n\t\t\tbuttons = this.s.buttons;\n\t\t}\n\n\t\tfor (var i = 0, ien = buttons.length; i < ien; i++) {\n\t\t\tvar inner = buttons[i].buttons;\n\n\t\t\tif (buttons[i].node === node) {\n\t\t\t\treturn nested + i;\n\t\t\t}\n\n\t\t\tif (inner && inner.length) {\n\t\t\t\tvar match = this.index(node, i + '-', inner);\n\n\t\t\t\tif (match !== null) {\n\t\t\t\t\treturn match;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t},\n\n\t/**\n\t * Get the instance name for the button set selector\n\t * @return {string} Instance name\n\t */\n\tname: function () {\n\t\treturn this.c.name;\n\t},\n\n\t/**\n\t * Get a button's node of the buttons container if no button is given\n\t * @param  {node} [node] Button node\n\t * @return {jQuery} Button element, or container\n\t */\n\tnode: function (node) {\n\t\tif (!node) {\n\t\t\treturn this.dom.container;\n\t\t}\n\n\t\tvar button = this._nodeToButton(node);\n\t\treturn $(button.node);\n\t},\n\n\t/**\n\t * Set / get a processing class on the selected button\n\t * @param {element} node Triggering button node\n\t * @param  {boolean} flag true to add, false to remove, undefined to get\n\t * @return {boolean|Buttons} Getter value or this if a setter.\n\t */\n\tprocessing: function (node, flag) {\n\t\tvar dt = this.s.dt;\n\t\tvar button = this._nodeToButton(node);\n\n\t\tif (flag === undefined) {\n\t\t\treturn $(button.node).hasClass('processing');\n\t\t}\n\n\t\t$(button.node).toggleClass('processing', flag);\n\n\t\t$(dt.table().node()).triggerHandler('buttons-processing.dt', [\n\t\t\tflag,\n\t\t\tdt.button(node),\n\t\t\tdt,\n\t\t\t$(node),\n\t\t\tbutton.conf\n\t\t]);\n\n\t\treturn this;\n\t},\n\n\t/**\n\t * Remove a button.\n\t * @param  {node} node Button node\n\t * @return {Buttons} Self for chaining\n\t */\n\tremove: function (node) {\n\t\tvar button = this._nodeToButton(node);\n\t\tvar host = this._nodeToHost(node);\n\t\tvar dt = this.s.dt;\n\n\t\t// Remove any child buttons first\n\t\tif (button.buttons.length) {\n\t\t\tfor (var i = button.buttons.length - 1; i >= 0; i--) {\n\t\t\t\tthis.remove(button.buttons[i].node);\n\t\t\t}\n\t\t}\n\n\t\tbutton.conf.destroying = true;\n\n\t\t// Allow the button to remove event handlers, etc\n\t\tif (button.conf.destroy) {\n\t\t\tbutton.conf.destroy.call(dt.button(node), dt, $(node), button.conf);\n\t\t}\n\n\t\tthis._removeKey(button.conf);\n\n\t\t$(button.node).remove();\n\n\t\tvar idx = $.inArray(button, host);\n\t\thost.splice(idx, 1);\n\n\t\treturn this;\n\t},\n\n\t/**\n\t * Get the text for a button\n\t * @param  {int|string} node Button index\n\t * @return {string} Button text\n\t */ /**\n\t * Set the text for a button\n\t * @param  {int|string|function} node Button index\n\t * @param  {string} label Text\n\t * @return {Buttons} Self for chaining\n\t */\n\ttext: function (node, label) {\n\t\tvar button = this._nodeToButton(node);\n\t\tvar textNode = button.textNode;\n\t\tvar dt = this.s.dt;\n\t\tvar jqNode = $(button.node);\n\t\tvar text = function (opt) {\n\t\t\treturn typeof opt === 'function' ? opt(dt, jqNode, button.conf) : opt;\n\t\t};\n\n\t\tif (label === undefined) {\n\t\t\treturn text(button.conf.text);\n\t\t}\n\n\t\tbutton.conf.text = label;\n\t\ttextNode.html(text(label));\n\n\t\treturn this;\n\t},\n\n\t/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\t * Constructor\n\t */\n\n\t/**\n\t * Buttons constructor\n\t * @private\n\t */\n\t_constructor: function () {\n\t\tvar that = this;\n\t\tvar dt = this.s.dt;\n\t\tvar dtSettings = dt.settings()[0];\n\t\tvar buttons = this.c.buttons;\n\n\t\tif (!dtSettings._buttons) {\n\t\t\tdtSettings._buttons = [];\n\t\t}\n\n\t\tdtSettings._buttons.push({\n\t\t\tinst: this,\n\t\t\tname: this.c.name\n\t\t});\n\n\t\tfor (var i = 0, ien = buttons.length; i < ien; i++) {\n\t\t\tthis.add(buttons[i]);\n\t\t}\n\n\t\tdt.on('destroy', function (e, settings) {\n\t\t\tif (settings === dtSettings) {\n\t\t\t\tthat.destroy();\n\t\t\t}\n\t\t});\n\n\t\t// Global key event binding to listen for button keys\n\t\t$('body').on('keyup.' + this.s.namespace, function (e) {\n\t\t\tif (!document.activeElement || document.activeElement === document.body) {\n\t\t\t\t// SUse a string of characters for fast lookup of if we need to\n\t\t\t\t// handle this\n\t\t\t\tvar character = String.fromCharCode(e.keyCode).toLowerCase();\n\n\t\t\t\tif (that.s.listenKeys.toLowerCase().indexOf(character) !== -1) {\n\t\t\t\t\tthat._keypress(character, e);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t},\n\n\t/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\t * Private methods\n\t */\n\n\t/**\n\t * Add a new button to the key press listener\n\t * @param {object} conf Resolved button configuration object\n\t * @private\n\t */\n\t_addKey: function (conf) {\n\t\tif (conf.key) {\n\t\t\tthis.s.listenKeys += $.isPlainObject(conf.key) ? conf.key.key : conf.key;\n\t\t}\n\t},\n\n\t/**\n\t * Insert the buttons into the container. Call without parameters!\n\t * @param  {node} [container] Recursive only - Insert point\n\t * @param  {array} [buttons] Recursive only - Buttons array\n\t * @private\n\t */\n\t_draw: function (container, buttons) {\n\t\tif (!container) {\n\t\t\tcontainer = this.dom.container;\n\t\t\tbuttons = this.s.buttons;\n\t\t}\n\n\t\tcontainer.children().detach();\n\n\t\tfor (var i = 0, ien = buttons.length; i < ien; i++) {\n\t\t\tcontainer.append(buttons[i].inserter);\n\t\t\tcontainer.append(' ');\n\n\t\t\tif (buttons[i].buttons && buttons[i].buttons.length) {\n\t\t\t\tthis._draw(buttons[i].collection, buttons[i].buttons);\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Create buttons from an array of buttons\n\t * @param  {array} attachTo Buttons array to attach to\n\t * @param  {object} button Button definition\n\t * @param  {boolean} inCollection true if the button is in a collection\n\t * @private\n\t */\n\t_expandButton: function (\n\t\tattachTo,\n\t\tbutton,\n\t\tsplit,\n\t\tinCollection,\n\t\tinSplit,\n\t\tattachPoint,\n\t\tparentConf\n\t) {\n\t\tvar dt = this.s.dt;\n\t\tvar isSplit = false;\n\t\tvar domCollection = this.c.dom.collection;\n\t\tvar buttons = !Array.isArray(button) ? [button] : button;\n\n\t\tif (button === undefined) {\n\t\t\tbuttons = !Array.isArray(split) ? [split] : split;\n\t\t}\n\n\t\tfor (var i = 0, ien = buttons.length; i < ien; i++) {\n\t\t\tvar conf = this._resolveExtends(buttons[i]);\n\n\t\t\tif (!conf) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tisSplit = conf.config && conf.config.split ? true : false;\n\n\t\t\t// If the configuration is an array, then expand the buttons at this\n\t\t\t// point\n\t\t\tif (Array.isArray(conf)) {\n\t\t\t\tthis._expandButton(\n\t\t\t\t\tattachTo,\n\t\t\t\t\tconf,\n\t\t\t\t\tbuilt !== undefined && built.conf !== undefined ? built.conf.split : undefined,\n\t\t\t\t\tinCollection,\n\t\t\t\t\tparentConf !== undefined && parentConf.split !== undefined,\n\t\t\t\t\tattachPoint,\n\t\t\t\t\tparentConf\n\t\t\t\t);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tvar built = this._buildButton(\n\t\t\t\tconf,\n\t\t\t\tinCollection,\n\t\t\t\tconf.split !== undefined ||\n\t\t\t\t\t(conf.config !== undefined && conf.config.split !== undefined),\n\t\t\t\tinSplit\n\t\t\t);\n\t\t\tif (!built) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (attachPoint !== undefined && attachPoint !== null) {\n\t\t\t\tattachTo.splice(attachPoint, 0, built);\n\t\t\t\tattachPoint++;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tattachTo.push(built);\n\t\t\t}\n\n\t\t\t// Create the dropdown for a collection\n\t\t\tif (built.conf.buttons) {\n\t\t\t\tbuilt.collection = $('<' + domCollection.container.content.tag + '/>');\n\t\t\t\tbuilt.conf._collection = built.collection;\n\n\t\t\t\t$(built.node).append(domCollection.action.dropHtml);\n\n\t\t\t\tthis._expandButton(\n\t\t\t\t\tbuilt.buttons,\n\t\t\t\t\tbuilt.conf.buttons,\n\t\t\t\t\tbuilt.conf.split,\n\t\t\t\t\t!isSplit,\n\t\t\t\t\tisSplit,\n\t\t\t\t\tattachPoint,\n\t\t\t\t\tbuilt.conf\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t// And the split collection\n\t\t\tif (built.conf.split) {\n\t\t\t\tbuilt.collection = $('<' + domCollection.container.tag + '/>');\n\t\t\t\tbuilt.conf._collection = built.collection;\n\n\t\t\t\tfor (var j = 0; j < built.conf.split.length; j++) {\n\t\t\t\t\tvar item = built.conf.split[j];\n\n\t\t\t\t\tif (typeof item === 'object') {\n\t\t\t\t\t\titem.parent = parentConf;\n\n\t\t\t\t\t\tif (item.collectionLayout === undefined) {\n\t\t\t\t\t\t\titem.collectionLayout = built.conf.collectionLayout;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (item.dropup === undefined) {\n\t\t\t\t\t\t\titem.dropup = built.conf.dropup;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (item.fade === undefined) {\n\t\t\t\t\t\t\titem.fade = built.conf.fade;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis._expandButton(\n\t\t\t\t\tbuilt.buttons,\n\t\t\t\t\tbuilt.conf.buttons,\n\t\t\t\t\tbuilt.conf.split,\n\t\t\t\t\t!isSplit,\n\t\t\t\t\tisSplit,\n\t\t\t\t\tattachPoint,\n\t\t\t\t\tbuilt.conf\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tbuilt.conf.parent = parentConf;\n\n\t\t\t// init call is made here, rather than buildButton as it needs to\n\t\t\t// be selectable, and for that it needs to be in the buttons array\n\t\t\tif (conf.init) {\n\t\t\t\tconf.init.call(dt.button(built.node), dt, $(built.node), conf);\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Create an individual button\n\t * @param  {object} config            Resolved button configuration\n\t * @param  {boolean} inCollection `true` if a collection button\n\t * @return {object} Completed button description object\n\t * @private\n\t */\n\t_buildButton: function (config, inCollection, isSplit, inSplit) {\n\t\tvar configDom = this.c.dom;\n\t\tvar textNode;\n\t\tvar dt = this.s.dt;\n\t\tvar text = function (opt) {\n\t\t\treturn typeof opt === 'function' ? opt(dt, button, config) : opt;\n\t\t};\n\n\t\t// Create an object that describes the button which can be in `dom.button`, or\n\t\t// `dom.collection.button` or `dom.split.button` or `dom.collection.split.button`!\n\t\t// Each should extend from `dom.button`.\n\t\tvar dom = $.extend(true, {}, configDom.button);\n\n\t\tif (inCollection && isSplit && configDom.collection.split) {\n\t\t\t$.extend(true, dom, configDom.collection.split.action);\n\t\t}\n\t\telse if (inSplit || inCollection) {\n\t\t\t$.extend(true, dom, configDom.collection.button);\n\t\t}\n\t\telse if (isSplit) {\n\t\t\t$.extend(true, dom, configDom.split.button);\n\t\t}\n\n\t\t// Spacers don't do much other than insert an element into the DOM\n\t\tif (config.spacer) {\n\t\t\tvar spacer = $('<' + dom.spacer.tag + '/>')\n\t\t\t\t.addClass('dt-button-spacer ' + config.style + ' ' + dom.spacer.className)\n\t\t\t\t.html(text(config.text));\n\n\t\t\treturn {\n\t\t\t\tconf: config,\n\t\t\t\tnode: spacer,\n\t\t\t\tinserter: spacer,\n\t\t\t\tbuttons: [],\n\t\t\t\tinCollection: inCollection,\n\t\t\t\tisSplit: isSplit,\n\t\t\t\tcollection: null,\n\t\t\t\ttextNode: spacer\n\t\t\t};\n\t\t}\n\n\t\t// Make sure that the button is available based on whatever requirements\n\t\t// it has. For example, PDF button require pdfmake\n\t\tif (config.available && !config.available(dt, config) && !config.hasOwnProperty('html')) {\n\t\t\treturn false;\n\t\t}\n\n\t\tvar button;\n\n\t\tif (!config.hasOwnProperty('html')) {\n\t\t\tvar action = function (e, dt, button, config) {\n\t\t\t\tconfig.action.call(dt.button(button), e, dt, button, config);\n\n\t\t\t\t$(dt.table().node()).triggerHandler('buttons-action.dt', [\n\t\t\t\t\tdt.button(button),\n\t\t\t\t\tdt,\n\t\t\t\t\tbutton,\n\t\t\t\t\tconfig\n\t\t\t\t]);\n\t\t\t};\n\n\t\t\tvar tag = config.tag || dom.tag;\n\t\t\tvar clickBlurs = config.clickBlurs === undefined ? true : config.clickBlurs;\n\n\t\t\tbutton = $('<' + tag + '/>')\n\t\t\t\t.addClass(dom.className)\n\t\t\t\t.attr('tabindex', this.s.dt.settings()[0].iTabIndex)\n\t\t\t\t.attr('aria-controls', this.s.dt.table().node().id)\n\t\t\t\t.on('click.dtb', function (e) {\n\t\t\t\t\te.preventDefault();\n\n\t\t\t\t\tif (!button.hasClass(dom.disabled) && config.action) {\n\t\t\t\t\t\taction(e, dt, button, config);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (clickBlurs) {\n\t\t\t\t\t\tbutton.trigger('blur');\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.on('keypress.dtb', function (e) {\n\t\t\t\t\tif (e.keyCode === 13) {\n\t\t\t\t\t\te.preventDefault();\n\n\t\t\t\t\t\tif (!button.hasClass(dom.disabled) && config.action) {\n\t\t\t\t\t\t\taction(e, dt, button, config);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t// Make `a` tags act like a link\n\t\t\tif (tag.toLowerCase() === 'a') {\n\t\t\t\tbutton.attr('href', '#');\n\t\t\t}\n\n\t\t\t// Button tags should have `type=button` so they don't have any default behaviour\n\t\t\tif (tag.toLowerCase() === 'button') {\n\t\t\t\tbutton.attr('type', 'button');\n\t\t\t}\n\n\t\t\tif (dom.liner.tag) {\n\t\t\t\tvar liner = $('<' + dom.liner.tag + '/>')\n\t\t\t\t\t.html(text(config.text))\n\t\t\t\t\t.addClass(dom.liner.className);\n\n\t\t\t\tif (dom.liner.tag.toLowerCase() === 'a') {\n\t\t\t\t\tliner.attr('href', '#');\n\t\t\t\t}\n\n\t\t\t\tbutton.append(liner);\n\t\t\t\ttextNode = liner;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tbutton.html(text(config.text));\n\t\t\t\ttextNode = button;\n\t\t\t}\n\n\t\t\tif (config.enabled === false) {\n\t\t\t\tbutton.addClass(dom.disabled);\n\t\t\t}\n\n\t\t\tif (config.className) {\n\t\t\t\tbutton.addClass(config.className);\n\t\t\t}\n\n\t\t\tif (config.titleAttr) {\n\t\t\t\tbutton.attr('title', text(config.titleAttr));\n\t\t\t}\n\n\t\t\tif (config.attr) {\n\t\t\t\tbutton.attr(config.attr);\n\t\t\t}\n\n\t\t\tif (!config.namespace) {\n\t\t\t\tconfig.namespace = '.dt-button-' + _buttonCounter++;\n\t\t\t}\n\n\t\t\tif (config.config !== undefined && config.config.split) {\n\t\t\t\tconfig.split = config.config.split;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tbutton = $(config.html);\n\t\t}\n\n\t\tvar buttonContainer = this.c.dom.buttonContainer;\n\t\tvar inserter;\n\t\tif (buttonContainer && buttonContainer.tag) {\n\t\t\tinserter = $('<' + buttonContainer.tag + '/>')\n\t\t\t\t.addClass(buttonContainer.className)\n\t\t\t\t.append(button);\n\t\t}\n\t\telse {\n\t\t\tinserter = button;\n\t\t}\n\n\t\tthis._addKey(config);\n\n\t\t// Style integration callback for DOM manipulation\n\t\t// Note that this is _not_ documented. It is currently\n\t\t// for style integration only\n\t\tif (this.c.buttonCreated) {\n\t\t\tinserter = this.c.buttonCreated(config, inserter);\n\t\t}\n\n\t\tvar splitDiv;\n\n\t\tif (isSplit) {\n\t\t\tvar dropdownConf = inCollection\n\t\t\t\t? $.extend(true, this.c.dom.split, this.c.dom.collection.split)\n\t\t\t\t: this.c.dom.split;\n\t\t\tvar wrapperConf = dropdownConf.wrapper;\n\n\t\t\tsplitDiv = $('<' + wrapperConf.tag + '/>')\n\t\t\t\t.addClass(wrapperConf.className)\n\t\t\t\t.append(button);\n\n\t\t\tvar dropButtonConfig = $.extend(config, {\n\t\t\t\talign: dropdownConf.dropdown.align,\n\t\t\t\tattr: {\n\t\t\t\t\t'aria-haspopup': 'dialog',\n\t\t\t\t\t'aria-expanded': false\n\t\t\t\t},\n\t\t\t\tclassName: dropdownConf.dropdown.className,\n\t\t\t\tcloseButton: false,\n\t\t\t\tsplitAlignClass: dropdownConf.dropdown.splitAlignClass,\n\t\t\t\ttext: dropdownConf.dropdown.text\n\t\t\t});\n\n\t\t\tthis._addKey(dropButtonConfig);\n\n\t\t\tvar splitAction = function (e, dt, button, config) {\n\t\t\t\t_dtButtons.split.action.call(dt.button(splitDiv), e, dt, button, config);\n\n\t\t\t\t$(dt.table().node()).triggerHandler('buttons-action.dt', [\n\t\t\t\t\tdt.button(button),\n\t\t\t\t\tdt,\n\t\t\t\t\tbutton,\n\t\t\t\t\tconfig\n\t\t\t\t]);\n\t\t\t\tbutton.attr('aria-expanded', true);\n\t\t\t};\n\n\t\t\tvar dropButton = $(\n\t\t\t\t'<button class=\"' + dropdownConf.dropdown.className + ' dt-button\"></button>'\n\t\t\t)\n\t\t\t\t.html(dropdownConf.dropdown.dropHtml)\n\t\t\t\t.on('click.dtb', function (e) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\te.stopPropagation();\n\n\t\t\t\t\tif (!dropButton.hasClass(dom.disabled)) {\n\t\t\t\t\t\tsplitAction(e, dt, dropButton, dropButtonConfig);\n\t\t\t\t\t}\n\t\t\t\t\tif (clickBlurs) {\n\t\t\t\t\t\tdropButton.trigger('blur');\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.on('keypress.dtb', function (e) {\n\t\t\t\t\tif (e.keyCode === 13) {\n\t\t\t\t\t\te.preventDefault();\n\n\t\t\t\t\t\tif (!dropButton.hasClass(dom.disabled)) {\n\t\t\t\t\t\t\tsplitAction(e, dt, dropButton, dropButtonConfig);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\tif (config.split.length === 0) {\n\t\t\t\tdropButton.addClass('dtb-hide-drop');\n\t\t\t}\n\n\t\t\tsplitDiv.append(dropButton).attr(dropButtonConfig.attr);\n\t\t}\n\n\t\treturn {\n\t\t\tconf: config,\n\t\t\tnode: isSplit ? splitDiv.get(0) : button.get(0),\n\t\t\tinserter: isSplit ? splitDiv : inserter,\n\t\t\tbuttons: [],\n\t\t\tinCollection: inCollection,\n\t\t\tisSplit: isSplit,\n\t\t\tinSplit: inSplit,\n\t\t\tcollection: null,\n\t\t\ttextNode: textNode\n\t\t};\n\t},\n\n\t/**\n\t * Get the button object from a node (recursive)\n\t * @param  {node} node Button node\n\t * @param  {array} [buttons] Button array, uses base if not defined\n\t * @return {object} Button object\n\t * @private\n\t */\n\t_nodeToButton: function (node, buttons) {\n\t\tif (!buttons) {\n\t\t\tbuttons = this.s.buttons;\n\t\t}\n\n\t\tfor (var i = 0, ien = buttons.length; i < ien; i++) {\n\t\t\tif (buttons[i].node === node) {\n\t\t\t\treturn buttons[i];\n\t\t\t}\n\n\t\t\tif (buttons[i].buttons.length) {\n\t\t\t\tvar ret = this._nodeToButton(node, buttons[i].buttons);\n\n\t\t\t\tif (ret) {\n\t\t\t\t\treturn ret;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Get container array for a button from a button node (recursive)\n\t * @param  {node} node Button node\n\t * @param  {array} [buttons] Button array, uses base if not defined\n\t * @return {array} Button's host array\n\t * @private\n\t */\n\t_nodeToHost: function (node, buttons) {\n\t\tif (!buttons) {\n\t\t\tbuttons = this.s.buttons;\n\t\t}\n\n\t\tfor (var i = 0, ien = buttons.length; i < ien; i++) {\n\t\t\tif (buttons[i].node === node) {\n\t\t\t\treturn buttons;\n\t\t\t}\n\n\t\t\tif (buttons[i].buttons.length) {\n\t\t\t\tvar ret = this._nodeToHost(node, buttons[i].buttons);\n\n\t\t\t\tif (ret) {\n\t\t\t\t\treturn ret;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Handle a key press - determine if any button's key configured matches\n\t * what was typed and trigger the action if so.\n\t * @param  {string} character The character pressed\n\t * @param  {object} e Key event that triggered this call\n\t * @private\n\t */\n\t_keypress: function (character, e) {\n\t\t// Check if this button press already activated on another instance of Buttons\n\t\tif (e._buttonsHandled) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar run = function (conf, node) {\n\t\t\tif (!conf.key) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (conf.key === character) {\n\t\t\t\te._buttonsHandled = true;\n\t\t\t\t$(node).click();\n\t\t\t}\n\t\t\telse if ($.isPlainObject(conf.key)) {\n\t\t\t\tif (conf.key.key !== character) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (conf.key.shiftKey && !e.shiftKey) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (conf.key.altKey && !e.altKey) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (conf.key.ctrlKey && !e.ctrlKey) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (conf.key.metaKey && !e.metaKey) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Made it this far - it is good\n\t\t\t\te._buttonsHandled = true;\n\t\t\t\t$(node).click();\n\t\t\t}\n\t\t};\n\n\t\tvar recurse = function (a) {\n\t\t\tfor (var i = 0, ien = a.length; i < ien; i++) {\n\t\t\t\trun(a[i].conf, a[i].node);\n\n\t\t\t\tif (a[i].buttons.length) {\n\t\t\t\t\trecurse(a[i].buttons);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\trecurse(this.s.buttons);\n\t},\n\n\t/**\n\t * Remove a key from the key listener for this instance (to be used when a\n\t * button is removed)\n\t * @param  {object} conf Button configuration\n\t * @private\n\t */\n\t_removeKey: function (conf) {\n\t\tif (conf.key) {\n\t\t\tvar character = $.isPlainObject(conf.key) ? conf.key.key : conf.key;\n\n\t\t\t// Remove only one character, as multiple buttons could have the\n\t\t\t// same listening key\n\t\t\tvar a = this.s.listenKeys.split('');\n\t\t\tvar idx = $.inArray(character, a);\n\t\t\ta.splice(idx, 1);\n\t\t\tthis.s.listenKeys = a.join('');\n\t\t}\n\t},\n\n\t/**\n\t * Resolve a button configuration\n\t * @param  {string|function|object} conf Button config to resolve\n\t * @return {object} Button configuration\n\t * @private\n\t */\n\t_resolveExtends: function (conf) {\n\t\tvar that = this;\n\t\tvar dt = this.s.dt;\n\t\tvar i, ien;\n\t\tvar toConfObject = function (base) {\n\t\t\tvar loop = 0;\n\n\t\t\t// Loop until we have resolved to a button configuration, or an\n\t\t\t// array of button configurations (which will be iterated\n\t\t\t// separately)\n\t\t\twhile (!$.isPlainObject(base) && !Array.isArray(base)) {\n\t\t\t\tif (base === undefined) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (typeof base === 'function') {\n\t\t\t\t\tbase = base.call(that, dt, conf);\n\n\t\t\t\t\tif (!base) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (typeof base === 'string') {\n\t\t\t\t\tif (!_dtButtons[base]) {\n\t\t\t\t\t\treturn { html: base };\n\t\t\t\t\t}\n\n\t\t\t\t\tbase = _dtButtons[base];\n\t\t\t\t}\n\n\t\t\t\tloop++;\n\t\t\t\tif (loop > 30) {\n\t\t\t\t\t// Protect against misconfiguration killing the browser\n\t\t\t\t\tthrow 'Buttons: Too many iterations';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn Array.isArray(base) ? base : $.extend({}, base);\n\t\t};\n\n\t\tconf = toConfObject(conf);\n\n\t\twhile (conf && conf.extend) {\n\t\t\t// Use `toConfObject` in case the button definition being extended\n\t\t\t// is itself a string or a function\n\t\t\tif (!_dtButtons[conf.extend]) {\n\t\t\t\tthrow 'Cannot extend unknown button type: ' + conf.extend;\n\t\t\t}\n\n\t\t\tvar objArray = toConfObject(_dtButtons[conf.extend]);\n\t\t\tif (Array.isArray(objArray)) {\n\t\t\t\treturn objArray;\n\t\t\t}\n\t\t\telse if (!objArray) {\n\t\t\t\t// This is a little brutal as it might be possible to have a\n\t\t\t\t// valid button without the extend, but if there is no extend\n\t\t\t\t// then the host button would be acting in an undefined state\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// Stash the current class name\n\t\t\tvar originalClassName = objArray.className;\n\n\t\t\tif (conf.config !== undefined && objArray.config !== undefined) {\n\t\t\t\tconf.config = $.extend({}, objArray.config, conf.config);\n\t\t\t}\n\n\t\t\tconf = $.extend({}, objArray, conf);\n\n\t\t\t// The extend will have overwritten the original class name if the\n\t\t\t// `conf` object also assigned a class, but we want to concatenate\n\t\t\t// them so they are list that is combined from all extended buttons\n\t\t\tif (originalClassName && conf.className !== originalClassName) {\n\t\t\t\tconf.className = originalClassName + ' ' + conf.className;\n\t\t\t}\n\n\t\t\t// Although we want the `conf` object to overwrite almost all of\n\t\t\t// the properties of the object being extended, the `extend`\n\t\t\t// property should come from the object being extended\n\t\t\tconf.extend = objArray.extend;\n\t\t}\n\n\t\t// Buttons to be added to a collection  -gives the ability to define\n\t\t// if buttons should be added to the start or end of a collection\n\t\tvar postfixButtons = conf.postfixButtons;\n\t\tif (postfixButtons) {\n\t\t\tif (!conf.buttons) {\n\t\t\t\tconf.buttons = [];\n\t\t\t}\n\n\t\t\tfor (i = 0, ien = postfixButtons.length; i < ien; i++) {\n\t\t\t\tconf.buttons.push(postfixButtons[i]);\n\t\t\t}\n\t\t}\n\n\t\tvar prefixButtons = conf.prefixButtons;\n\t\tif (prefixButtons) {\n\t\t\tif (!conf.buttons) {\n\t\t\t\tconf.buttons = [];\n\t\t\t}\n\n\t\t\tfor (i = 0, ien = prefixButtons.length; i < ien; i++) {\n\t\t\t\tconf.buttons.splice(i, 0, prefixButtons[i]);\n\t\t\t}\n\t\t}\n\n\t\treturn conf;\n\t},\n\n\t/**\n\t * Display (and replace if there is an existing one) a popover attached to a button\n\t * @param {string|node} content Content to show\n\t * @param {DataTable.Api} hostButton DT API instance of the button\n\t * @param {object} inOpts Options (see object below for all options)\n\t */\n\t_popover: function (content, hostButton, inOpts, e) {\n\t\tvar dt = hostButton;\n\t\tvar c = this.c;\n\t\tvar closed = false;\n\t\tvar options = $.extend(\n\t\t\t{\n\t\t\t\talign: 'button-left', // button-right, dt-container, split-left, split-right\n\t\t\t\tautoClose: false,\n\t\t\t\tbackground: true,\n\t\t\t\tbackgroundClassName: 'dt-button-background',\n\t\t\t\tcloseButton: true,\n\t\t\t\tcontainerClassName: c.dom.collection.container.className,\n\t\t\t\tcontentClassName: c.dom.collection.container.content.className,\n\t\t\t\tcollectionLayout: '',\n\t\t\t\tcollectionTitle: '',\n\t\t\t\tdropup: false,\n\t\t\t\tfade: 400,\n\t\t\t\tpopoverTitle: '',\n\t\t\t\trightAlignClassName: 'dt-button-right',\n\t\t\t\ttag: c.dom.collection.container.tag\n\t\t\t},\n\t\t\tinOpts\n\t\t);\n\n\t\tvar containerSelector = options.tag + '.' + options.containerClassName.replace(/ /g, '.');\n\t\tvar hostNode = hostButton.node();\n\n\t\tvar close = function () {\n\t\t\tclosed = true;\n\n\t\t\t_fadeOut($(containerSelector), options.fade, function () {\n\t\t\t\t$(this).detach();\n\t\t\t});\n\n\t\t\t$(dt.buttons('[aria-haspopup=\"dialog\"][aria-expanded=\"true\"]').nodes()).attr(\n\t\t\t\t'aria-expanded',\n\t\t\t\t'false'\n\t\t\t);\n\n\t\t\t$('div.dt-button-background').off('click.dtb-collection');\n\t\t\tButtons.background(false, options.backgroundClassName, options.fade, hostNode);\n\n\t\t\t$(window).off('resize.resize.dtb-collection');\n\t\t\t$('body').off('.dtb-collection');\n\t\t\tdt.off('buttons-action.b-internal');\n\t\t\tdt.off('destroy');\n\t\t};\n\n\t\tif (content === false) {\n\t\t\tclose();\n\t\t\treturn;\n\t\t}\n\n\t\tvar existingExpanded = $(\n\t\t\tdt.buttons('[aria-haspopup=\"dialog\"][aria-expanded=\"true\"]').nodes()\n\t\t);\n\t\tif (existingExpanded.length) {\n\t\t\t// Reuse the current position if the button that was triggered is inside an existing collection\n\t\t\tif (hostNode.closest(containerSelector).length) {\n\t\t\t\thostNode = existingExpanded.eq(0);\n\t\t\t}\n\n\t\t\tclose();\n\t\t}\n\n\t\t// Try to be smart about the layout\n\t\tvar cnt = $('.dt-button', content).length;\n\t\tvar mod = '';\n\n\t\tif (cnt === 3) {\n\t\t\tmod = 'dtb-b3';\n\t\t}\n\t\telse if (cnt === 2) {\n\t\t\tmod = 'dtb-b2';\n\t\t}\n\t\telse if (cnt === 1) {\n\t\t\tmod = 'dtb-b1';\n\t\t}\n\n\t\tvar display = $('<' + options.tag + '/>')\n\t\t\t.addClass(options.containerClassName)\n\t\t\t.addClass(options.collectionLayout)\n\t\t\t.addClass(options.splitAlignClass)\n\t\t\t.addClass(mod)\n\t\t\t.css('display', 'none')\n\t\t\t.attr({\n\t\t\t\t'aria-modal': true,\n\t\t\t\trole: 'dialog'\n\t\t\t});\n\n\t\tcontent = $(content)\n\t\t\t.addClass(options.contentClassName)\n\t\t\t.attr('role', 'menu')\n\t\t\t.appendTo(display);\n\n\t\thostNode.attr('aria-expanded', 'true');\n\n\t\tif (hostNode.parents('body')[0] !== document.body) {\n\t\t\thostNode = document.body.lastChild;\n\t\t}\n\n\t\tif (options.popoverTitle) {\n\t\t\tdisplay.prepend(\n\t\t\t\t'<div class=\"dt-button-collection-title\">' + options.popoverTitle + '</div>'\n\t\t\t);\n\t\t}\n\t\telse if (options.collectionTitle) {\n\t\t\tdisplay.prepend(\n\t\t\t\t'<div class=\"dt-button-collection-title\">' + options.collectionTitle + '</div>'\n\t\t\t);\n\t\t}\n\n\t\tif (options.closeButton) {\n\t\t\tdisplay\n\t\t\t\t.prepend('<div class=\"dtb-popover-close\">&times;</div>')\n\t\t\t\t.addClass('dtb-collection-closeable');\n\t\t}\n\n\t\t_fadeIn(display.insertAfter(hostNode), options.fade);\n\n\t\tvar tableContainer = $(hostButton.table().container());\n\t\tvar position = display.css('position');\n\n\t\tif (options.span === 'container' || options.align === 'dt-container') {\n\t\t\thostNode = hostNode.parent();\n\t\t\tdisplay.css('width', tableContainer.width());\n\t\t}\n\n\t\t// Align the popover relative to the DataTables container\n\t\t// Useful for wide popovers such as SearchPanes\n\t\tif (position === 'absolute') {\n\t\t\t// Align relative to the host button\n\t\t\tvar offsetParent = $(hostNode[0].offsetParent);\n\t\t\tvar buttonPosition = hostNode.position();\n\t\t\tvar buttonOffset = hostNode.offset();\n\t\t\tvar tableSizes = offsetParent.offset();\n\t\t\tvar containerPosition = offsetParent.position();\n\t\t\tvar computed = window.getComputedStyle(offsetParent[0]);\n\n\t\t\ttableSizes.height = offsetParent.outerHeight();\n\t\t\ttableSizes.width = offsetParent.width() + parseFloat(computed.paddingLeft);\n\t\t\ttableSizes.right = tableSizes.left + tableSizes.width;\n\t\t\ttableSizes.bottom = tableSizes.top + tableSizes.height;\n\n\t\t\t// Set the initial position so we can read height / width\n\t\t\tvar top = buttonPosition.top + hostNode.outerHeight();\n\t\t\tvar left = buttonPosition.left;\n\n\t\t\tdisplay.css({\n\t\t\t\ttop: top,\n\t\t\t\tleft: left\n\t\t\t});\n\n\t\t\t// Get the popover position\n\t\t\tcomputed = window.getComputedStyle(display[0]);\n\t\t\tvar popoverSizes = display.offset();\n\n\t\t\tpopoverSizes.height = display.outerHeight();\n\t\t\tpopoverSizes.width = display.outerWidth();\n\t\t\tpopoverSizes.right = popoverSizes.left + popoverSizes.width;\n\t\t\tpopoverSizes.bottom = popoverSizes.top + popoverSizes.height;\n\t\t\tpopoverSizes.marginTop = parseFloat(computed.marginTop);\n\t\t\tpopoverSizes.marginBottom = parseFloat(computed.marginBottom);\n\n\t\t\t// First position per the class requirements - pop up and right align\n\t\t\tif (options.dropup) {\n\t\t\t\ttop =\n\t\t\t\t\tbuttonPosition.top -\n\t\t\t\t\tpopoverSizes.height -\n\t\t\t\t\tpopoverSizes.marginTop -\n\t\t\t\t\tpopoverSizes.marginBottom;\n\t\t\t}\n\n\t\t\tif (options.align === 'button-right' || display.hasClass(options.rightAlignClassName)) {\n\t\t\t\tleft = buttonPosition.left - popoverSizes.width + hostNode.outerWidth();\n\t\t\t}\n\n\t\t\t// Container alignment - make sure it doesn't overflow the table container\n\t\t\tif (options.align === 'dt-container' || options.align === 'container') {\n\t\t\t\tif (left < buttonPosition.left) {\n\t\t\t\t\tleft = -buttonPosition.left;\n\t\t\t\t}\n\n\t\t\t\tif (left + popoverSizes.width > tableSizes.width) {\n\t\t\t\t\tleft = tableSizes.width - popoverSizes.width;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Window adjustment\n\t\t\tif (containerPosition.left + left + popoverSizes.width > $(window).width()) {\n\t\t\t\t// Overflowing the document to the right\n\t\t\t\tleft = $(window).width() - popoverSizes.width - containerPosition.left;\n\t\t\t}\n\n\t\t\tif (buttonOffset.left + left < 0) {\n\t\t\t\t// Off to the left of the document\n\t\t\t\tleft = -buttonOffset.left;\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\tcontainerPosition.top + top + popoverSizes.height >\n\t\t\t\t$(window).height() + $(window).scrollTop()\n\t\t\t) {\n\t\t\t\t// Pop up if otherwise we'd need the user to scroll down\n\t\t\t\ttop =\n\t\t\t\t\tbuttonPosition.top -\n\t\t\t\t\tpopoverSizes.height -\n\t\t\t\t\tpopoverSizes.marginTop -\n\t\t\t\t\tpopoverSizes.marginBottom;\n\t\t\t}\n\n\t\t\tif (containerPosition.top + top < $(window).scrollTop()) {\n\t\t\t\t// Correction for when the top is beyond the top of the page\n\t\t\t\ttop = buttonPosition.top + hostNode.outerHeight();\n\t\t\t}\n\n\t\t\t// Calculations all done - now set it\n\t\t\tdisplay.css({\n\t\t\t\ttop: top,\n\t\t\t\tleft: left\n\t\t\t});\n\t\t}\n\t\telse {\n\t\t\t// Fix position - centre on screen\n\t\t\tvar position = function () {\n\t\t\t\tvar half = $(window).height() / 2;\n\n\t\t\t\tvar top = display.height() / 2;\n\t\t\t\tif (top > half) {\n\t\t\t\t\ttop = half;\n\t\t\t\t}\n\n\t\t\t\tdisplay.css('marginTop', top * -1);\n\t\t\t};\n\n\t\t\tposition();\n\n\t\t\t$(window).on('resize.dtb-collection', function () {\n\t\t\t\tposition();\n\t\t\t});\n\t\t}\n\n\t\tif (options.background) {\n\t\t\tButtons.background(\n\t\t\t\ttrue,\n\t\t\t\toptions.backgroundClassName,\n\t\t\t\toptions.fade,\n\t\t\t\toptions.backgroundHost || hostNode\n\t\t\t);\n\t\t}\n\n\t\t// This is bonkers, but if we don't have a click listener on the\n\t\t// background element, iOS Safari will ignore the body click\n\t\t// listener below. An empty function here is all that is\n\t\t// required to make it work...\n\t\t$('div.dt-button-background').on('click.dtb-collection', function () {});\n\n\t\tif (options.autoClose) {\n\t\t\tsetTimeout(function () {\n\t\t\t\tdt.on('buttons-action.b-internal', function (e, btn, dt, node) {\n\t\t\t\t\tif (node[0] === hostNode[0]) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tclose();\n\t\t\t\t});\n\t\t\t}, 0);\n\t\t}\n\n\t\t$(display).trigger('buttons-popover.dt');\n\n\t\tdt.on('destroy', close);\n\n\t\tsetTimeout(function () {\n\t\t\tclosed = false;\n\t\t\t$('body')\n\t\t\t\t.on('click.dtb-collection', function (e) {\n\t\t\t\t\tif (closed) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t// andSelf is deprecated in jQ1.8, but we want 1.7 compat\n\t\t\t\t\tvar back = $.fn.addBack ? 'addBack' : 'andSelf';\n\t\t\t\t\tvar parent = $(e.target).parent()[0];\n\n\t\t\t\t\tif (\n\t\t\t\t\t\t(!$(e.target).parents()[back]().filter(content).length &&\n\t\t\t\t\t\t\t!$(parent).hasClass('dt-buttons')) ||\n\t\t\t\t\t\t$(e.target).hasClass('dt-button-background')\n\t\t\t\t\t) {\n\t\t\t\t\t\tclose();\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.on('keyup.dtb-collection', function (e) {\n\t\t\t\t\tif (e.keyCode === 27) {\n\t\t\t\t\t\tclose();\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.on('keydown.dtb-collection', function (e) {\n\t\t\t\t\t// Focus trap for tab key\n\t\t\t\t\tvar elements = $('a, button', content);\n\t\t\t\t\tvar active = document.activeElement;\n\n\t\t\t\t\tif (e.keyCode !== 9) {\n\t\t\t\t\t\t// tab\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (elements.index(active) === -1) {\n\t\t\t\t\t\t// If current focus is not inside the popover\n\t\t\t\t\t\telements.first().focus();\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t}\n\t\t\t\t\telse if (e.shiftKey) {\n\t\t\t\t\t\t// Reverse tabbing order when shift key is pressed\n\t\t\t\t\t\tif (active === elements[0]) {\n\t\t\t\t\t\t\telements.last().focus();\n\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (active === elements.last()[0]) {\n\t\t\t\t\t\t\telements.first().focus();\n\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t}, 0);\n\t}\n});\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n * Statics\n */\n\n/**\n * Show / hide a background layer behind a collection\n * @param  {boolean} Flag to indicate if the background should be shown or\n *   hidden\n * @param  {string} Class to assign to the background\n * @static\n */\nButtons.background = function (show, className, fade, insertPoint) {\n\tif (fade === undefined) {\n\t\tfade = 400;\n\t}\n\tif (!insertPoint) {\n\t\tinsertPoint = document.body;\n\t}\n\n\tif (show) {\n\t\t_fadeIn(\n\t\t\t$('<div/>').addClass(className).css('display', 'none').insertAfter(insertPoint),\n\t\t\tfade\n\t\t);\n\t}\n\telse {\n\t\t_fadeOut($('div.' + className), fade, function () {\n\t\t\t$(this).removeClass(className).remove();\n\t\t});\n\t}\n};\n\n/**\n * Instance selector - select Buttons instances based on an instance selector\n * value from the buttons assigned to a DataTable. This is only useful if\n * multiple instances are attached to a DataTable.\n * @param  {string|int|array} Instance selector - see `instance-selector`\n *   documentation on the DataTables site\n * @param  {array} Button instance array that was attached to the DataTables\n *   settings object\n * @return {array} Buttons instances\n * @static\n */\nButtons.instanceSelector = function (group, buttons) {\n\tif (group === undefined || group === null) {\n\t\treturn $.map(buttons, function (v) {\n\t\t\treturn v.inst;\n\t\t});\n\t}\n\n\tvar ret = [];\n\tvar names = $.map(buttons, function (v) {\n\t\treturn v.name;\n\t});\n\n\t// Flatten the group selector into an array of single options\n\tvar process = function (input) {\n\t\tif (Array.isArray(input)) {\n\t\t\tfor (var i = 0, ien = input.length; i < ien; i++) {\n\t\t\t\tprocess(input[i]);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tif (typeof input === 'string') {\n\t\t\tif (input.indexOf(',') !== -1) {\n\t\t\t\t// String selector, list of names\n\t\t\t\tprocess(input.split(','));\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// String selector individual name\n\t\t\t\tvar idx = $.inArray(input.trim(), names);\n\n\t\t\t\tif (idx !== -1) {\n\t\t\t\t\tret.push(buttons[idx].inst);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if (typeof input === 'number') {\n\t\t\t// Index selector\n\t\t\tret.push(buttons[input].inst);\n\t\t}\n\t\telse if (typeof input === 'object') {\n\t\t\t// Actual instance selector\n\t\t\tret.push(input);\n\t\t}\n\t};\n\n\tprocess(group);\n\n\treturn ret;\n};\n\n/**\n * Button selector - select one or more buttons from a selector input so some\n * operation can be performed on them.\n * @param  {array} Button instances array that the selector should operate on\n * @param  {string|int|node|jQuery|array} Button selector - see\n *   `button-selector` documentation on the DataTables site\n * @return {array} Array of objects containing `inst` and `idx` properties of\n *   the selected buttons so you know which instance each button belongs to.\n * @static\n */\nButtons.buttonSelector = function (insts, selector) {\n\tvar ret = [];\n\tvar nodeBuilder = function (a, buttons, baseIdx) {\n\t\tvar button;\n\t\tvar idx;\n\n\t\tfor (var i = 0, ien = buttons.length; i < ien; i++) {\n\t\t\tbutton = buttons[i];\n\n\t\t\tif (button) {\n\t\t\t\tidx = baseIdx !== undefined ? baseIdx + i : i + '';\n\n\t\t\t\ta.push({\n\t\t\t\t\tnode: button.node,\n\t\t\t\t\tname: button.conf.name,\n\t\t\t\t\tidx: idx\n\t\t\t\t});\n\n\t\t\t\tif (button.buttons) {\n\t\t\t\t\tnodeBuilder(a, button.buttons, idx + '-');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\tvar run = function (selector, inst) {\n\t\tvar i, ien;\n\t\tvar buttons = [];\n\t\tnodeBuilder(buttons, inst.s.buttons);\n\n\t\tvar nodes = $.map(buttons, function (v) {\n\t\t\treturn v.node;\n\t\t});\n\n\t\tif (Array.isArray(selector) || selector instanceof $) {\n\t\t\tfor (i = 0, ien = selector.length; i < ien; i++) {\n\t\t\t\trun(selector[i], inst);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tif (selector === null || selector === undefined || selector === '*') {\n\t\t\t// Select all\n\t\t\tfor (i = 0, ien = buttons.length; i < ien; i++) {\n\t\t\t\tret.push({\n\t\t\t\t\tinst: inst,\n\t\t\t\t\tnode: buttons[i].node\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\telse if (typeof selector === 'number') {\n\t\t\t// Main button index selector\n\t\t\tif (inst.s.buttons[selector]) {\n\t\t\t\tret.push({\n\t\t\t\t\tinst: inst,\n\t\t\t\t\tnode: inst.s.buttons[selector].node\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\telse if (typeof selector === 'string') {\n\t\t\tif (selector.indexOf(',') !== -1) {\n\t\t\t\t// Split\n\t\t\t\tvar a = selector.split(',');\n\n\t\t\t\tfor (i = 0, ien = a.length; i < ien; i++) {\n\t\t\t\t\trun(a[i].trim(), inst);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (selector.match(/^\\d+(\\-\\d+)*$/)) {\n\t\t\t\t// Sub-button index selector\n\t\t\t\tvar indexes = $.map(buttons, function (v) {\n\t\t\t\t\treturn v.idx;\n\t\t\t\t});\n\n\t\t\t\tret.push({\n\t\t\t\t\tinst: inst,\n\t\t\t\t\tnode: buttons[$.inArray(selector, indexes)].node\n\t\t\t\t});\n\t\t\t}\n\t\t\telse if (selector.indexOf(':name') !== -1) {\n\t\t\t\t// Button name selector\n\t\t\t\tvar name = selector.replace(':name', '');\n\n\t\t\t\tfor (i = 0, ien = buttons.length; i < ien; i++) {\n\t\t\t\t\tif (buttons[i].name === name) {\n\t\t\t\t\t\tret.push({\n\t\t\t\t\t\t\tinst: inst,\n\t\t\t\t\t\t\tnode: buttons[i].node\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// jQuery selector on the nodes\n\t\t\t\t$(nodes)\n\t\t\t\t\t.filter(selector)\n\t\t\t\t\t.each(function () {\n\t\t\t\t\t\tret.push({\n\t\t\t\t\t\t\tinst: inst,\n\t\t\t\t\t\t\tnode: this\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\telse if (typeof selector === 'object' && selector.nodeName) {\n\t\t\t// Node selector\n\t\t\tvar idx = $.inArray(selector, nodes);\n\n\t\t\tif (idx !== -1) {\n\t\t\t\tret.push({\n\t\t\t\t\tinst: inst,\n\t\t\t\t\tnode: nodes[idx]\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t};\n\n\tfor (var i = 0, ien = insts.length; i < ien; i++) {\n\t\tvar inst = insts[i];\n\n\t\trun(selector, inst);\n\t}\n\n\treturn ret;\n};\n\n/**\n * Default function used for formatting output data.\n * @param {*} str Data to strip\n */\nButtons.stripData = function (str, config) {\n\tif (typeof str !== 'string') {\n\t\treturn str;\n\t}\n\n\t// Always remove script tags\n\tstr = str.replace(/<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi, '');\n\n\t// Always remove comments\n\tstr = str.replace(/<!\\-\\-.*?\\-\\->/g, '');\n\n\tif (!config || config.stripHtml) {\n\t\tstr = str.replace(/<[^>]*>/g, '');\n\t}\n\n\tif (!config || config.trim) {\n\t\tstr = str.replace(/^\\s+|\\s+$/g, '');\n\t}\n\n\tif (!config || config.stripNewlines) {\n\t\tstr = str.replace(/\\n/g, ' ');\n\t}\n\n\tif (!config || config.decodeEntities) {\n\t\tif (_entityDecoder) {\n\t\t\tstr = _entityDecoder(str);\n\t\t}\n\t\telse {\n\t\t\t_exportTextarea.innerHTML = str;\n\t\t\tstr = _exportTextarea.value;\n\t\t}\n\t}\n\n\treturn str;\n};\n\n/**\n * Provide a custom entity decoding function - e.g. a regex one, which can be\n * much faster than the built in DOM option, but also larger code size.\n * @param {function} fn\n */\nButtons.entityDecoder = function (fn) {\n\t_entityDecoder = fn;\n}\n\n/**\n * Buttons defaults. For full documentation, please refer to the docs/option\n * directory or the DataTables site.\n * @type {Object}\n * @static\n */\nButtons.defaults = {\n\tbuttons: ['copy', 'excel', 'csv', 'pdf', 'print'],\n\tname: 'main',\n\ttabIndex: 0,\n\tdom: {\n\t\tcontainer: {\n\t\t\ttag: 'div',\n\t\t\tclassName: 'dt-buttons'\n\t\t},\n\t\tcollection: {\n\t\t\taction: {\n\t\t\t\t// action button\n\t\t\t\tdropHtml: '<span class=\"dt-button-down-arrow\">&#x25BC;</span>'\n\t\t\t},\n\t\t\tcontainer: {\n\t\t\t\t// The element used for the dropdown\n\t\t\t\tclassName: 'dt-button-collection',\n\t\t\t\tcontent: {\n\t\t\t\t\tclassName: '',\n\t\t\t\t\ttag: 'div'\n\t\t\t\t},\n\t\t\t\ttag: 'div'\n\t\t\t}\n\t\t\t// optionally\n\t\t\t// , button: IButton - buttons inside the collection container\n\t\t\t// , split: ISplit - splits inside the collection container\n\t\t},\n\t\tbutton: {\n\t\t\ttag: 'button',\n\t\t\tclassName: 'dt-button',\n\t\t\tactive: 'dt-button-active', // class name\n\t\t\tdisabled: 'disabled', // class name\n\t\t\tspacer: {\n\t\t\t\tclassName: 'dt-button-spacer',\n\t\t\t\ttag: 'span'\n\t\t\t},\n\t\t\tliner: {\n\t\t\t\ttag: 'span',\n\t\t\t\tclassName: ''\n\t\t\t}\n\t\t},\n\t\tsplit: {\n\t\t\taction: {\n\t\t\t\t// action button\n\t\t\t\tclassName: 'dt-button-split-drop-button dt-button',\n\t\t\t\ttag: 'button'\n\t\t\t},\n\t\t\tdropdown: {\n\t\t\t\t// button to trigger the dropdown\n\t\t\t\talign: 'split-right',\n\t\t\t\tclassName: 'dt-button-split-drop',\n\t\t\t\tdropHtml: '<span class=\"dt-button-down-arrow\">&#x25BC;</span>',\n\t\t\t\tsplitAlignClass: 'dt-button-split-left',\n\t\t\t\ttag: 'button'\n\t\t\t},\n\t\t\twrapper: {\n\t\t\t\t// wrap around both\n\t\t\t\tclassName: 'dt-button-split',\n\t\t\t\ttag: 'div'\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Version information\n * @type {string}\n * @static\n */\nButtons.version = '2.4.2';\n\n$.extend(_dtButtons, {\n\tcollection: {\n\t\ttext: function (dt) {\n\t\t\treturn dt.i18n('buttons.collection', 'Collection');\n\t\t},\n\t\tclassName: 'buttons-collection',\n\t\tcloseButton: false,\n\t\tinit: function (dt, button, config) {\n\t\t\tbutton.attr('aria-expanded', false);\n\t\t},\n\t\taction: function (e, dt, button, config) {\n\t\t\tif (config._collection.parents('body').length) {\n\t\t\t\tthis.popover(false, config);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.popover(config._collection, config);\n\t\t\t}\n\n\t\t\t// When activated using a key - auto focus on the\n\t\t\t// first item in the popover\n\t\t\tif (e.type === 'keypress') {\n\t\t\t\t$('a, button', config._collection).eq(0).focus();\n\t\t\t}\n\t\t},\n\t\tattr: {\n\t\t\t'aria-haspopup': 'dialog'\n\t\t}\n\t\t// Also the popover options, defined in Buttons.popover\n\t},\n\tsplit: {\n\t\ttext: function (dt) {\n\t\t\treturn dt.i18n('buttons.split', 'Split');\n\t\t},\n\t\tclassName: 'buttons-split',\n\t\tcloseButton: false,\n\t\tinit: function (dt, button, config) {\n\t\t\treturn button.attr('aria-expanded', false);\n\t\t},\n\t\taction: function (e, dt, button, config) {\n\t\t\tthis.popover(config._collection, config);\n\t\t},\n\t\tattr: {\n\t\t\t'aria-haspopup': 'dialog'\n\t\t}\n\t\t// Also the popover options, defined in Buttons.popover\n\t},\n\tcopy: function (dt, conf) {\n\t\tif (_dtButtons.copyHtml5) {\n\t\t\treturn 'copyHtml5';\n\t\t}\n\t},\n\tcsv: function (dt, conf) {\n\t\tif (_dtButtons.csvHtml5 && _dtButtons.csvHtml5.available(dt, conf)) {\n\t\t\treturn 'csvHtml5';\n\t\t}\n\t},\n\texcel: function (dt, conf) {\n\t\tif (_dtButtons.excelHtml5 && _dtButtons.excelHtml5.available(dt, conf)) {\n\t\t\treturn 'excelHtml5';\n\t\t}\n\t},\n\tpdf: function (dt, conf) {\n\t\tif (_dtButtons.pdfHtml5 && _dtButtons.pdfHtml5.available(dt, conf)) {\n\t\t\treturn 'pdfHtml5';\n\t\t}\n\t},\n\tpageLength: function (dt) {\n\t\tvar lengthMenu = dt.settings()[0].aLengthMenu;\n\t\tvar vals = [];\n\t\tvar lang = [];\n\t\tvar text = function (dt) {\n\t\t\treturn dt.i18n(\n\t\t\t\t'buttons.pageLength',\n\t\t\t\t{\n\t\t\t\t\t'-1': 'Show all rows',\n\t\t\t\t\t_: 'Show %d rows'\n\t\t\t\t},\n\t\t\t\tdt.page.len()\n\t\t\t);\n\t\t};\n\n\t\t// Support for DataTables 1.x 2D array\n\t\tif (Array.isArray(lengthMenu[0])) {\n\t\t\tvals = lengthMenu[0];\n\t\t\tlang = lengthMenu[1];\n\t\t}\n\t\telse {\n\t\t\tfor (var i = 0; i < lengthMenu.length; i++) {\n\t\t\t\tvar option = lengthMenu[i];\n\n\t\t\t\t// Support for DataTables 2 object in the array\n\t\t\t\tif ($.isPlainObject(option)) {\n\t\t\t\t\tvals.push(option.value);\n\t\t\t\t\tlang.push(option.label);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tvals.push(option);\n\t\t\t\t\tlang.push(option);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\textend: 'collection',\n\t\t\ttext: text,\n\t\t\tclassName: 'buttons-page-length',\n\t\t\tautoClose: true,\n\t\t\tbuttons: $.map(vals, function (val, i) {\n\t\t\t\treturn {\n\t\t\t\t\ttext: lang[i],\n\t\t\t\t\tclassName: 'button-page-length',\n\t\t\t\t\taction: function (e, dt) {\n\t\t\t\t\t\tdt.page.len(val).draw();\n\t\t\t\t\t},\n\t\t\t\t\tinit: function (dt, node, conf) {\n\t\t\t\t\t\tvar that = this;\n\t\t\t\t\t\tvar fn = function () {\n\t\t\t\t\t\t\tthat.active(dt.page.len() === val);\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tdt.on('length.dt' + conf.namespace, fn);\n\t\t\t\t\t\tfn();\n\t\t\t\t\t},\n\t\t\t\t\tdestroy: function (dt, node, conf) {\n\t\t\t\t\t\tdt.off('length.dt' + conf.namespace);\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}),\n\t\t\tinit: function (dt, node, conf) {\n\t\t\t\tvar that = this;\n\t\t\t\tdt.on('length.dt' + conf.namespace, function () {\n\t\t\t\t\tthat.text(conf.text);\n\t\t\t\t});\n\t\t\t},\n\t\t\tdestroy: function (dt, node, conf) {\n\t\t\t\tdt.off('length.dt' + conf.namespace);\n\t\t\t}\n\t\t};\n\t},\n\tspacer: {\n\t\tstyle: 'empty',\n\t\tspacer: true,\n\t\ttext: function (dt) {\n\t\t\treturn dt.i18n('buttons.spacer', '');\n\t\t}\n\t}\n});\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n * DataTables API\n *\n * For complete documentation, please refer to the docs/api directory or the\n * DataTables site\n */\n\n// Buttons group and individual button selector\nDataTable.Api.register('buttons()', function (group, selector) {\n\t// Argument shifting\n\tif (selector === undefined) {\n\t\tselector = group;\n\t\tgroup = undefined;\n\t}\n\n\tthis.selector.buttonGroup = group;\n\n\tvar res = this.iterator(\n\t\ttrue,\n\t\t'table',\n\t\tfunction (ctx) {\n\t\t\tif (ctx._buttons) {\n\t\t\t\treturn Buttons.buttonSelector(\n\t\t\t\t\tButtons.instanceSelector(group, ctx._buttons),\n\t\t\t\t\tselector\n\t\t\t\t);\n\t\t\t}\n\t\t},\n\t\ttrue\n\t);\n\n\tres._groupSelector = group;\n\treturn res;\n});\n\n// Individual button selector\nDataTable.Api.register('button()', function (group, selector) {\n\t// just run buttons() and truncate\n\tvar buttons = this.buttons(group, selector);\n\n\tif (buttons.length > 1) {\n\t\tbuttons.splice(1, buttons.length);\n\t}\n\n\treturn buttons;\n});\n\n// Active buttons\nDataTable.Api.registerPlural('buttons().active()', 'button().active()', function (flag) {\n\tif (flag === undefined) {\n\t\treturn this.map(function (set) {\n\t\t\treturn set.inst.active(set.node);\n\t\t});\n\t}\n\n\treturn this.each(function (set) {\n\t\tset.inst.active(set.node, flag);\n\t});\n});\n\n// Get / set button action\nDataTable.Api.registerPlural('buttons().action()', 'button().action()', function (action) {\n\tif (action === undefined) {\n\t\treturn this.map(function (set) {\n\t\t\treturn set.inst.action(set.node);\n\t\t});\n\t}\n\n\treturn this.each(function (set) {\n\t\tset.inst.action(set.node, action);\n\t});\n});\n\n// Collection control\nDataTable.Api.registerPlural(\n\t'buttons().collectionRebuild()',\n\t'button().collectionRebuild()',\n\tfunction (buttons) {\n\t\treturn this.each(function (set) {\n\t\t\tfor (var i = 0; i < buttons.length; i++) {\n\t\t\t\tif (typeof buttons[i] === 'object') {\n\t\t\t\t\tbuttons[i].parentConf = set;\n\t\t\t\t}\n\t\t\t}\n\t\t\tset.inst.collectionRebuild(set.node, buttons);\n\t\t});\n\t}\n);\n\n// Enable / disable buttons\nDataTable.Api.register(['buttons().enable()', 'button().enable()'], function (flag) {\n\treturn this.each(function (set) {\n\t\tset.inst.enable(set.node, flag);\n\t});\n});\n\n// Disable buttons\nDataTable.Api.register(['buttons().disable()', 'button().disable()'], function () {\n\treturn this.each(function (set) {\n\t\tset.inst.disable(set.node);\n\t});\n});\n\n// Button index\nDataTable.Api.register('button().index()', function () {\n\tvar idx = null;\n\n\tthis.each(function (set) {\n\t\tvar res = set.inst.index(set.node);\n\n\t\tif (res !== null) {\n\t\t\tidx = res;\n\t\t}\n\t});\n\n\treturn idx;\n});\n\n// Get button nodes\nDataTable.Api.registerPlural('buttons().nodes()', 'button().node()', function () {\n\tvar jq = $();\n\n\t// jQuery will automatically reduce duplicates to a single entry\n\t$(\n\t\tthis.each(function (set) {\n\t\t\tjq = jq.add(set.inst.node(set.node));\n\t\t})\n\t);\n\n\treturn jq;\n});\n\n// Get / set button processing state\nDataTable.Api.registerPlural('buttons().processing()', 'button().processing()', function (flag) {\n\tif (flag === undefined) {\n\t\treturn this.map(function (set) {\n\t\t\treturn set.inst.processing(set.node);\n\t\t});\n\t}\n\n\treturn this.each(function (set) {\n\t\tset.inst.processing(set.node, flag);\n\t});\n});\n\n// Get / set button text (i.e. the button labels)\nDataTable.Api.registerPlural('buttons().text()', 'button().text()', function (label) {\n\tif (label === undefined) {\n\t\treturn this.map(function (set) {\n\t\t\treturn set.inst.text(set.node);\n\t\t});\n\t}\n\n\treturn this.each(function (set) {\n\t\tset.inst.text(set.node, label);\n\t});\n});\n\n// Trigger a button's action\nDataTable.Api.registerPlural('buttons().trigger()', 'button().trigger()', function () {\n\treturn this.each(function (set) {\n\t\tset.inst.node(set.node).trigger('click');\n\t});\n});\n\n// Button resolver to the popover\nDataTable.Api.register('button().popover()', function (content, options) {\n\treturn this.map(function (set) {\n\t\treturn set.inst._popover(content, this.button(this[0].node), options);\n\t});\n});\n\n// Get the container elements\nDataTable.Api.register('buttons().containers()', function () {\n\tvar jq = $();\n\tvar groupSelector = this._groupSelector;\n\n\t// We need to use the group selector directly, since if there are no buttons\n\t// the result set will be empty\n\tthis.iterator(true, 'table', function (ctx) {\n\t\tif (ctx._buttons) {\n\t\t\tvar insts = Buttons.instanceSelector(groupSelector, ctx._buttons);\n\n\t\t\tfor (var i = 0, ien = insts.length; i < ien; i++) {\n\t\t\t\tjq = jq.add(insts[i].container());\n\t\t\t}\n\t\t}\n\t});\n\n\treturn jq;\n});\n\nDataTable.Api.register('buttons().container()', function () {\n\t// API level of nesting is `buttons()` so we can zip into the containers method\n\treturn this.containers().eq(0);\n});\n\n// Add a new button\nDataTable.Api.register('button().add()', function (idx, conf, draw) {\n\tvar ctx = this.context;\n\n\t// Don't use `this` as it could be empty - select the instances directly\n\tif (ctx.length) {\n\t\tvar inst = Buttons.instanceSelector(this._groupSelector, ctx[0]._buttons);\n\n\t\tif (inst.length) {\n\t\t\tinst[0].add(conf, idx, draw);\n\t\t}\n\t}\n\n\treturn this.button(this._groupSelector, idx);\n});\n\n// Destroy the button sets selected\nDataTable.Api.register('buttons().destroy()', function () {\n\tthis.pluck('inst')\n\t\t.unique()\n\t\t.each(function (inst) {\n\t\t\tinst.destroy();\n\t\t});\n\n\treturn this;\n});\n\n// Remove a button\nDataTable.Api.registerPlural('buttons().remove()', 'buttons().remove()', function () {\n\tthis.each(function (set) {\n\t\tset.inst.remove(set.node);\n\t});\n\n\treturn this;\n});\n\n// Information box that can be used by buttons\nvar _infoTimer;\nDataTable.Api.register('buttons.info()', function (title, message, time) {\n\tvar that = this;\n\n\tif (title === false) {\n\t\tthis.off('destroy.btn-info');\n\t\t_fadeOut($('#datatables_buttons_info'), 400, function () {\n\t\t\t$(this).remove();\n\t\t});\n\t\tclearTimeout(_infoTimer);\n\t\t_infoTimer = null;\n\n\t\treturn this;\n\t}\n\n\tif (_infoTimer) {\n\t\tclearTimeout(_infoTimer);\n\t}\n\n\tif ($('#datatables_buttons_info').length) {\n\t\t$('#datatables_buttons_info').remove();\n\t}\n\n\ttitle = title ? '<h2>' + title + '</h2>' : '';\n\n\t_fadeIn(\n\t\t$('<div id=\"datatables_buttons_info\" class=\"dt-button-info\"/>')\n\t\t\t.html(title)\n\t\t\t.append($('<div/>')[typeof message === 'string' ? 'html' : 'append'](message))\n\t\t\t.css('display', 'none')\n\t\t\t.appendTo('body')\n\t);\n\n\tif (time !== undefined && time !== 0) {\n\t\t_infoTimer = setTimeout(function () {\n\t\t\tthat.buttons.info(false);\n\t\t}, time);\n\t}\n\n\tthis.on('destroy.btn-info', function () {\n\t\tthat.buttons.info(false);\n\t});\n\n\treturn this;\n});\n\n// Get data from the table for export - this is common to a number of plug-in\n// buttons so it is included in the Buttons core library\nDataTable.Api.register('buttons.exportData()', function (options) {\n\tif (this.context.length) {\n\t\treturn _exportData(new DataTable.Api(this.context[0]), options);\n\t}\n});\n\n// Get information about the export that is common to many of the export data\n// types (DRY)\nDataTable.Api.register('buttons.exportInfo()', function (conf) {\n\tif (!conf) {\n\t\tconf = {};\n\t}\n\n\treturn {\n\t\tfilename: _filename(conf),\n\t\ttitle: _title(conf),\n\t\tmessageTop: _message(this, conf.message || conf.messageTop, 'top'),\n\t\tmessageBottom: _message(this, conf.messageBottom, 'bottom')\n\t};\n});\n\n/**\n * Get the file name for an exported file.\n *\n * @param {object}\tconfig Button configuration\n * @param {boolean} incExtension Include the file name extension\n */\nvar _filename = function (config) {\n\t// Backwards compatibility\n\tvar filename =\n\t\tconfig.filename === '*' &&\n\t\tconfig.title !== '*' &&\n\t\tconfig.title !== undefined &&\n\t\tconfig.title !== null &&\n\t\tconfig.title !== ''\n\t\t\t? config.title\n\t\t\t: config.filename;\n\n\tif (typeof filename === 'function') {\n\t\tfilename = filename();\n\t}\n\n\tif (filename === undefined || filename === null) {\n\t\treturn null;\n\t}\n\n\tif (filename.indexOf('*') !== -1) {\n\t\tfilename = filename.replace('*', $('head > title').text()).trim();\n\t}\n\n\t// Strip characters which the OS will object to\n\tfilename = filename.replace(/[^a-zA-Z0-9_\\u00A1-\\uFFFF\\.,\\-_ !\\(\\)]/g, '');\n\n\tvar extension = _stringOrFunction(config.extension);\n\tif (!extension) {\n\t\textension = '';\n\t}\n\n\treturn filename + extension;\n};\n\n/**\n * Simply utility method to allow parameters to be given as a function\n *\n * @param {undefined|string|function} option Option\n * @return {null|string} Resolved value\n */\nvar _stringOrFunction = function (option) {\n\tif (option === null || option === undefined) {\n\t\treturn null;\n\t}\n\telse if (typeof option === 'function') {\n\t\treturn option();\n\t}\n\treturn option;\n};\n\n/**\n * Get the title for an exported file.\n *\n * @param {object} config\tButton configuration\n */\nvar _title = function (config) {\n\tvar title = _stringOrFunction(config.title);\n\n\treturn title === null\n\t\t? null\n\t\t: title.indexOf('*') !== -1\n\t\t? title.replace('*', $('head > title').text() || 'Exported data')\n\t\t: title;\n};\n\nvar _message = function (dt, option, position) {\n\tvar message = _stringOrFunction(option);\n\tif (message === null) {\n\t\treturn null;\n\t}\n\n\tvar caption = $('caption', dt.table().container()).eq(0);\n\tif (message === '*') {\n\t\tvar side = caption.css('caption-side');\n\t\tif (side !== position) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn caption.length ? caption.text() : '';\n\t}\n\n\treturn message;\n};\n\nvar _exportTextarea = $('<textarea/>')[0];\nvar _exportData = function (dt, inOpts) {\n\tvar config = $.extend(\n\t\ttrue,\n\t\t{},\n\t\t{\n\t\t\trows: null,\n\t\t\tcolumns: '',\n\t\t\tmodifier: {\n\t\t\t\tsearch: 'applied',\n\t\t\t\torder: 'applied'\n\t\t\t},\n\t\t\torthogonal: 'display',\n\t\t\tstripHtml: true,\n\t\t\tstripNewlines: true,\n\t\t\tdecodeEntities: true,\n\t\t\ttrim: true,\n\t\t\tformat: {\n\t\t\t\theader: function (d) {\n\t\t\t\t\treturn Buttons.stripData(d, config);\n\t\t\t\t},\n\t\t\t\tfooter: function (d) {\n\t\t\t\t\treturn Buttons.stripData(d, config);\n\t\t\t\t},\n\t\t\t\tbody: function (d) {\n\t\t\t\t\treturn Buttons.stripData(d, config);\n\t\t\t\t}\n\t\t\t},\n\t\t\tcustomizeData: null\n\t\t},\n\t\tinOpts\n\t);\n\n\tvar header = dt\n\t\t.columns(config.columns)\n\t\t.indexes()\n\t\t.map(function (idx) {\n\t\t\tvar el = dt.column(idx).header();\n\t\t\treturn config.format.header(el.innerHTML, idx, el);\n\t\t})\n\t\t.toArray();\n\n\tvar footer = dt.table().footer()\n\t\t? dt\n\t\t\t\t.columns(config.columns)\n\t\t\t\t.indexes()\n\t\t\t\t.map(function (idx) {\n\t\t\t\t\tvar el = dt.column(idx).footer();\n\t\t\t\t\treturn config.format.footer(el ? el.innerHTML : '', idx, el);\n\t\t\t\t})\n\t\t\t\t.toArray()\n\t\t: null;\n\n\t// If Select is available on this table, and any rows are selected, limit the export\n\t// to the selected rows. If no rows are selected, all rows will be exported. Specify\n\t// a `selected` modifier to control directly.\n\tvar modifier = $.extend({}, config.modifier);\n\tif (dt.select && typeof dt.select.info === 'function' && modifier.selected === undefined) {\n\t\tif (dt.rows(config.rows, $.extend({ selected: true }, modifier)).any()) {\n\t\t\t$.extend(modifier, { selected: true });\n\t\t}\n\t}\n\n\tvar rowIndexes = dt.rows(config.rows, modifier).indexes().toArray();\n\tvar selectedCells = dt.cells(rowIndexes, config.columns);\n\tvar cells = selectedCells.render(config.orthogonal).toArray();\n\tvar cellNodes = selectedCells.nodes().toArray();\n\n\tvar columns = header.length;\n\tvar rows = columns > 0 ? cells.length / columns : 0;\n\tvar body = [];\n\tvar cellCounter = 0;\n\n\tfor (var i = 0, ien = rows; i < ien; i++) {\n\t\tvar row = [columns];\n\n\t\tfor (var j = 0; j < columns; j++) {\n\t\t\trow[j] = config.format.body(cells[cellCounter], i, j, cellNodes[cellCounter]);\n\t\t\tcellCounter++;\n\t\t}\n\n\t\tbody[i] = row;\n\t}\n\n\tvar data = {\n\t\theader: header,\n\t\tfooter: footer,\n\t\tbody: body\n\t};\n\n\tif (config.customizeData) {\n\t\tconfig.customizeData(data);\n\t}\n\n\treturn data;\n};\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n * DataTables interface\n */\n\n// Attach to DataTables objects for global access\n$.fn.dataTable.Buttons = Buttons;\n$.fn.DataTable.Buttons = Buttons;\n\n// DataTables creation - check if the buttons have been defined for this table,\n// they will have been if the `B` option was used in `dom`, otherwise we should\n// create the buttons instance here so they can be inserted into the document\n// using the API. Listen for `init` for compatibility with pre 1.10.10, but to\n// be removed in future.\n$(document).on('init.dt plugin-init.dt', function (e, settings) {\n\tif (e.namespace !== 'dt') {\n\t\treturn;\n\t}\n\n\tvar opts = settings.oInit.buttons || DataTable.defaults.buttons;\n\n\tif (opts && !settings._buttons) {\n\t\tnew Buttons(settings, opts).container();\n\t}\n});\n\nfunction _init(settings, options) {\n\tvar api = new DataTable.Api(settings);\n\tvar opts = options ? options : api.init().buttons || DataTable.defaults.buttons;\n\n\treturn new Buttons(api, opts).container();\n}\n\n// DataTables `dom` feature option\nDataTable.ext.feature.push({\n\tfnInit: _init,\n\tcFeature: 'B'\n});\n\n// DataTables 2 layout feature\nif (DataTable.ext.features) {\n\tDataTable.ext.features.register('buttons', _init);\n}\n\n\nreturn DataTable;\n}));\n"],
  "mappings": "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",
  "names": ["window", "document", "dt", "button", "config", "top", "e", "i", "ien", "selector", "inst"]
}
